import * as React from "react";
import { GridProps, TextFieldProps } from "@aws-amplify/ui-react";
import { CarbonProject } from "./graphql/types";
export declare type EscapeHatchProps = {
    [elementHierarchy: string]: Record<string, unknown>;
} | null;
export declare type VariantValues = {
    [key: string]: string;
};
export declare type Variant = {
    variantValues: VariantValues;
    overrides: EscapeHatchProps;
};
export declare type ValidationResponse = {
    hasError: boolean;
    errorMessage?: string;
};
export declare type ValidationFunction<T> = (value: T, validationResponse: ValidationResponse) => ValidationResponse | Promise<ValidationResponse>;
export declare type CarbonProjectUpdateFormInputValues = {
    projectName?: string;
    projectType?: string;
    estAnnualMitigations?: number;
    projectStatus?: string;
    scale?: string;
    country?: string;
    businessOwner?: string;
    projectOwners?: string[];
    carbonDevelopers?: string[];
    supportingPartners?: string[];
    auditors?: string[];
    sdgs?: string[];
    creditIssuanceDate?: string;
    totalCreditsIssued?: number;
    sector?: string;
    methodology?: string;
    sustainableCert?: string;
    validationBody?: string;
    verficationBody?: string;
    projectDuration?: number;
    registry?: string;
    validationCriteria?: string[];
    verificationCriteria?: string[];
    city?: string;
    address?: string;
    geographicalRegion?: string;
    coordinates?: string;
    googleMapLink?: string;
    creditsRetired?: number;
    currentCreditHolders?: string[];
    projectInsights?: string;
    projectDescFileLink?: string;
    reviewReportFileLink?: string;
    validationPlanFileLink?: string;
    validationReportFileLink?: string;
    mediaFiles?: string[];
};
export declare type CarbonProjectUpdateFormValidationValues = {
    projectName?: ValidationFunction<string>;
    projectType?: ValidationFunction<string>;
    estAnnualMitigations?: ValidationFunction<number>;
    projectStatus?: ValidationFunction<string>;
    scale?: ValidationFunction<string>;
    country?: ValidationFunction<string>;
    businessOwner?: ValidationFunction<string>;
    projectOwners?: ValidationFunction<string>;
    carbonDevelopers?: ValidationFunction<string>;
    supportingPartners?: ValidationFunction<string>;
    auditors?: ValidationFunction<string>;
    sdgs?: ValidationFunction<string>;
    creditIssuanceDate?: ValidationFunction<string>;
    totalCreditsIssued?: ValidationFunction<number>;
    sector?: ValidationFunction<string>;
    methodology?: ValidationFunction<string>;
    sustainableCert?: ValidationFunction<string>;
    validationBody?: ValidationFunction<string>;
    verficationBody?: ValidationFunction<string>;
    projectDuration?: ValidationFunction<number>;
    registry?: ValidationFunction<string>;
    validationCriteria?: ValidationFunction<string>;
    verificationCriteria?: ValidationFunction<string>;
    city?: ValidationFunction<string>;
    address?: ValidationFunction<string>;
    geographicalRegion?: ValidationFunction<string>;
    coordinates?: ValidationFunction<string>;
    googleMapLink?: ValidationFunction<string>;
    creditsRetired?: ValidationFunction<number>;
    currentCreditHolders?: ValidationFunction<string>;
    projectInsights?: ValidationFunction<string>;
    projectDescFileLink?: ValidationFunction<string>;
    reviewReportFileLink?: ValidationFunction<string>;
    validationPlanFileLink?: ValidationFunction<string>;
    validationReportFileLink?: ValidationFunction<string>;
    mediaFiles?: ValidationFunction<string>;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type CarbonProjectUpdateFormOverridesProps = {
    CarbonProjectUpdateFormGrid?: PrimitiveOverrideProps<GridProps>;
    projectName?: PrimitiveOverrideProps<TextFieldProps>;
    projectType?: PrimitiveOverrideProps<TextFieldProps>;
    estAnnualMitigations?: PrimitiveOverrideProps<TextFieldProps>;
    projectStatus?: PrimitiveOverrideProps<TextFieldProps>;
    scale?: PrimitiveOverrideProps<TextFieldProps>;
    country?: PrimitiveOverrideProps<TextFieldProps>;
    businessOwner?: PrimitiveOverrideProps<TextFieldProps>;
    projectOwners?: PrimitiveOverrideProps<TextFieldProps>;
    carbonDevelopers?: PrimitiveOverrideProps<TextFieldProps>;
    supportingPartners?: PrimitiveOverrideProps<TextFieldProps>;
    auditors?: PrimitiveOverrideProps<TextFieldProps>;
    sdgs?: PrimitiveOverrideProps<TextFieldProps>;
    creditIssuanceDate?: PrimitiveOverrideProps<TextFieldProps>;
    totalCreditsIssued?: PrimitiveOverrideProps<TextFieldProps>;
    sector?: PrimitiveOverrideProps<TextFieldProps>;
    methodology?: PrimitiveOverrideProps<TextFieldProps>;
    sustainableCert?: PrimitiveOverrideProps<TextFieldProps>;
    validationBody?: PrimitiveOverrideProps<TextFieldProps>;
    verficationBody?: PrimitiveOverrideProps<TextFieldProps>;
    projectDuration?: PrimitiveOverrideProps<TextFieldProps>;
    registry?: PrimitiveOverrideProps<TextFieldProps>;
    validationCriteria?: PrimitiveOverrideProps<TextFieldProps>;
    verificationCriteria?: PrimitiveOverrideProps<TextFieldProps>;
    city?: PrimitiveOverrideProps<TextFieldProps>;
    address?: PrimitiveOverrideProps<TextFieldProps>;
    geographicalRegion?: PrimitiveOverrideProps<TextFieldProps>;
    coordinates?: PrimitiveOverrideProps<TextFieldProps>;
    googleMapLink?: PrimitiveOverrideProps<TextFieldProps>;
    creditsRetired?: PrimitiveOverrideProps<TextFieldProps>;
    currentCreditHolders?: PrimitiveOverrideProps<TextFieldProps>;
    projectInsights?: PrimitiveOverrideProps<TextFieldProps>;
    projectDescFileLink?: PrimitiveOverrideProps<TextFieldProps>;
    reviewReportFileLink?: PrimitiveOverrideProps<TextFieldProps>;
    validationPlanFileLink?: PrimitiveOverrideProps<TextFieldProps>;
    validationReportFileLink?: PrimitiveOverrideProps<TextFieldProps>;
    mediaFiles?: PrimitiveOverrideProps<TextFieldProps>;
} & EscapeHatchProps;
export declare type CarbonProjectUpdateFormProps = React.PropsWithChildren<{
    overrides?: CarbonProjectUpdateFormOverridesProps | undefined | null;
} & {
    id?: string;
    carbonProject?: CarbonProject;
    onSubmit?: (fields: CarbonProjectUpdateFormInputValues) => CarbonProjectUpdateFormInputValues;
    onSuccess?: (fields: CarbonProjectUpdateFormInputValues) => void;
    onError?: (fields: CarbonProjectUpdateFormInputValues, errorMessage: string) => void;
    onChange?: (fields: CarbonProjectUpdateFormInputValues) => CarbonProjectUpdateFormInputValues;
    onValidate?: CarbonProjectUpdateFormValidationValues;
} & React.CSSProperties>;
export default function CarbonProjectUpdateForm(props: CarbonProjectUpdateFormProps): React.ReactElement;
